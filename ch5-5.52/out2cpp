#!/usr/bin/env ruby
# coding: utf-8

require 'strscan'

class ConsCell
  attr_accessor :car, :cdr
  def initialize car=nil, cdr=nil
    @car = car
    @cdr = cdr
  end

  def push cell
    if @car == nil
      @car = cell
      return self
    end

    if @cdr == nil
      @cdr = ConsCell.new
      @cdr.car = cell
      return self
    end
    
    return @cdr.push(cell)
    
  end
end

def tokenize str
  scanner = StringScanner.new(str)
  tokenized = []

  until scanner.eos?
    scanner.scan(/\s+/) ? nil : 
    scanner.scan(/\(/) ? tokenized << scanner.matched :
    scanner.scan(/\)/) ? tokenized << scanner.matched :
    scanner.scan(/[a-z0-9\-\_\?\!\/]+/) ? tokenized << scanner.matched :
    nil                                                    
  end
  tokenized  
end

# todo implement
def atom token
  pp token
  token
end

def read_from tokens
  token = tokens[0]
  tokens.delete_at(0)

  if token == "("
    cell = ConsCell.new
    while tokens[0] != ")"
      cell.push read_from tokens
    end
    
    tokens.delete_at(0)
    return cell
  end
  return atom token
end

if ARGV.size == 0
  puts "usage: out2cpp inputfile"
  exit
end

inputFileName = ARGV[0]
outputFileName = File.basename(inputFileName, ".out") + ".cpp"

input = File.open(inputFileName)
vmSource = input.read

tokens = tokenize(vmSource)
parsed = read_from tokens
pp parsed
# out = open(outputFileName, "w")
# out.puts("//")
#out.close
